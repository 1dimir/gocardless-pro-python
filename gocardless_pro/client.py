# WARNING: Do not edit by hand, this file was generated by Crank:
#
#   https://github.com/gocardless/crank
#

import services
from .http_client import HttpClient

class Client(object):

    def __init__(self, access_token=None, environment=None):
        if access_token is None:
            raise ValueError('No access_token provided')

        if environment is None:
            raise ValueError('No environment specified')

        base_url = self._environment_url(environment)
        self._http_client = HttpClient(base_url, access_token)

    @property
    def creditors(self):
        return services.CreditorsService(self._http_client)

    @property
    def creditor_bank_accounts(self):
        return services.CreditorBankAccountsService(self._http_client)

    @property
    def customers(self):
        return services.CustomersService(self._http_client)

    @property
    def customer_bank_accounts(self):
        return services.CustomerBankAccountsService(self._http_client)

    @property
    def events(self):
        return services.EventsService(self._http_client)

    @property
    def helpers(self):
        return services.HelpersService(self._http_client)

    @property
    def mandates(self):
        return services.MandatesService(self._http_client)

    @property
    def payments(self):
        return services.PaymentsService(self._http_client)

    @property
    def payouts(self):
        return services.PayoutsService(self._http_client)

    @property
    def redirect_flows(self):
        return services.RedirectFlowsService(self._http_client)

    @property
    def refunds(self):
        return services.RefundsService(self._http_client)

    @property
    def subscriptions(self):
        return services.SubscriptionsService(self._http_client)

    def _environment_url(self, environment):
        if environment == 'live':
            return 'https://api.gocardless.com'

        if environment == 'sandbox':
            return 'https://api-sandbox.gocardless.com'

        raise ValueError('Invalid environment "{}" - use either "live" or '
                         '"sandbox"'.format(environment))

