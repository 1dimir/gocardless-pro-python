# WARNING: Do not edit by hand, this file was generated by Crank:
#
#   https://github.com/gocardless/crank
#

from . import base_service
from .. import resources
from ..paginator import Paginator
from .. import errors

class SchemeIdentifiersService(base_service.BaseService):
    """Service class that provides access to the scheme_identifiers
    endpoints of the GoCardless Pro API.
    """

    RESOURCE_CLASS = resources.SchemeIdentifier
    RESOURCE_NAME = 'scheme_identifiers'


    def list(self,params=None, headers=None):
        """List scheme_identifiers.

        Returns a [cursor-paginated](#api-usage-cursor-pagination) list of your
        scheme identifiers.

        Args:
              params (dict, optional): Query string parameters.

        Returns:
              ListResponse of SchemeIdentifier instances
        """
        path = '/scheme_identifiers'
        

        response = self._perform_request('GET', path, params, headers,
                                         retry_failures=True)
        return self._resource_for(response)

    def all(self, params=None):
        if params is None:
            params = {}
        return Paginator(self, params)
    
  

    def get(self,identity,params=None, headers=None):
        """Get a single scheme_identifier.

        Retrieves the details of an existing scheme identifier.

        Args:
              identity (string): Unique identifier, usually beginning with "SU".
              params (dict, optional): Query string parameters.

        Returns:
              SchemeIdentifier
        """
        path = self._sub_url_params('/scheme_identifiers/:identity', {
          
            'identity': identity,
          })
        

        response = self._perform_request('GET', path, params, headers,
                                         retry_failures=True)
        return self._resource_for(response)
  
