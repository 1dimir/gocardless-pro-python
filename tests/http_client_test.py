# WARNING: Do not edit by hand, this file was generated by Crank:
#
#   https://github.com/gocardless/crank
#

import requests
import responses
from nose.tools import assert_equals, assert_in

from gocardless_pro import http_client

access_token = 'access-token-xyz'
client = http_client.HttpClient('http://example.com', access_token)

@responses.activate
def test_uses_correct_url():
    responses.add(responses.GET, 'http://example.com/test')
    client.get('/test')

@responses.activate
def test_authorization_header_present():
    responses.add(responses.GET, 'http://example.com/test')
    client.get('/test')
    assert_equals(responses.calls[0].request.headers['authorization'],
                  'Bearer ' + access_token)

@responses.activate
def test_includes_query_params():
    responses.add(responses.GET, 'http://example.com/test')
    client.get('/test', params={'page': '1'})
    assert_in('?page=1', responses.calls[0].request.url)

@responses.activate
def test_post_includes_json_body():
    responses.add(responses.POST, 'http://example.com/test')
    client.post('/test', body={'name': 'Billy Jean'})
    assert_equals(responses.calls[0].request.body, '{"name": "Billy Jean"}')

@responses.activate
def test_put_includes_json_body():
    responses.add(responses.PUT, 'http://example.com/test')
    client.put('/test', body={'name': 'Billy Jean'})
    assert_equals(responses.calls[0].request.body, '{"name": "Billy Jean"}')

